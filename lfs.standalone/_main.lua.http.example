httpserver = require("httpserver")

function on_http_event(self, event, arg)
    if event == "-connected" then
        local peer_port, peer_ip = self.conn:getpeer()
        print("Incoming connection; ip='" .. peer_ip .. "', port='" .. peer_port .. "'")
        -- we can store whatever we want in @self
        self.peer_ip = peer_ip
        self.peer_port = peer_port
        return true
    elseif event == "-request" then
        print("Request; method='" .. arg.method .. "', path='" .. arg.path .. "', proto='" .. arg.proto .. "', ver='" .. arg.ver .. "'")
        -- we can store whatever we want in @self
        self.method = arg.method
        self.path = arg.path
    elseif event == "-header" then
        print("Request header; name='" .. arg.name .. "', value='" .. arg.value .. "'")
    elseif event == "-end-of-header" then
        print("Request header done;")
        self.start_response(200, "OK")
        self.send_header("X-Your-IP", self.peer_ip)
        self.send_header("X-Your-Port", self.peer_port)
        self.send_header("X-Req-Method", self.method)
        self.send_header("X-Req-Path", self.path)
        self.send_header("Content-Length", self.content_length)
        self.send_header("Content-Type", "text/plain")
        self.end_header()
        if self.content_length == 0 then
            self.close()
        end
    elseif event == "-body" then
        local chunk_len = arg:len()
        print("Request body; length='" .. chunk_len .. "', start='" .. arg:sub(1, 16) .. "'")
        -- self.send(arg:lower())
        self.send(arg)
    elseif event == "-end-of-body" then
        print("Request done;")
        self.close()
    elseif event == "-disconnected" then
        print("Connection closed;")
    end
end


function on_wifi_got_ip(T)
    print("Connected to wifi; ip='" .. T.IP .. "'")
    print("Starting server; port='80'")
    srv = httpserver.new(80, on_http_event)
end


print("Connecting to wifi;")
wifi.setmode(wifi.STATION)
wifi.eventmon.register(wifi.eventmon.STA_GOT_IP, on_wifi_got_ip)
wifi.sta.config { ssid="qwerqwer", pwd="asdfasdf" }

-- vim: set sw=4 ts=4 et:
